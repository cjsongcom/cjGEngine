
#ifndef _CJSHDERPROGDESC_H_
#define _CJSHDERPROGDESC_H_


#include "cjShaderDef.h"


//
// cjDefaultShaderVtxProgDesc
//

class CJENGINE_API cjDefaultShaderVtxProgDesc : public cjShaderProgramDesc
{
public:
	void A32BitBoundaryViloationTest() { } //cjdefer

	void SetTexStageUVSetIndexAndOutType(cjUINT32 texStage, cjUINT32 uvSetIndex, 
		cjShaderMtlDefault::TEXUVOUT_TYPE uvOutType);

public:
	static const cjUINT32 _A_ST_DNBPOS = 1;

	// [0] byte 0
	CJSHDESC_DEF_BIT(TM,						2, _ST)				// 2B	// non-skin / skin / instance
	CJSHDESC_DEF_BIT(ADE_FROM,					2, TM)
	CJSHDESC_DEF_BIT(VTXCOLOR_FROM,				1, ADE_FROM)		// 0:none, 1:From vertex
	CJSHDESC_DEF_BIT(SPECULAR_USE,				1, VTXCOLOR_FROM)	
	CJSHDESC_DEF_BIT(TEX_LIGHT_OPER,			1, SPECULAR_USE)
	CJSHDESC_DEF_BIT(LIGHTING,					1, TEX_LIGHT_OPER)

	CJSHDESC_DEF_BIT(FOG_TYPE,					2, LIGHTING)
	CJSHDESC_DEF_BIT(NRMMAP_TYPE,				2, FOG_TYPE)
	CJSHDESC_DEF_BIT(ENVMAP_TYPE,				3, NRMMAP_TYPE)
	CJSHDESC_DEF_BIT(OUT_WORLD_POS,				1, ENVMAP_TYPE)     // 0:local, 1:world

	CJSHDESC_DEF_BIT(OUT_UV_COUNT,				2, OUT_WORLD_POS)
	CJSHDESC_DEF_BIT(OUT_NORMAL,				2, OUT_UV_COUNT)		// 0:no, 1:Local Normal, 2:World Normal
	CJSHDESC_DEF_BIT(OUT_WORLD_VIEW,			1, OUT_NORMAL)
	CJSHDESC_DEF_BIT(OUT_TANGENT_VIEW,			1, OUT_WORLD_VIEW)
	CJSHDESC_DEF_BIT(OUT_WORLD_NBT,				1, OUT_TANGENT_VIEW)
	CJSHDESC_DEF_BIT(VTX_LIGHTING_ONLY,			1, OUT_WORLD_NBT)

	CJSHDESC_DEF_BIT(DIR_LCOUNT,				3, VTX_LIGHTING_ONLY)	// 3bit   // 0:no, 1,2,3,4: count
	CJSHDESC_DEF_BIT(POINT_LCOUNT,				3, DIR_LCOUNT)			// 
	CJSHDESC_DEF_BIT(SPOT_LCOUNT,				2, POINT_LCOUNT)		//
	
	// [1] byte 0
	CJSHDESC_DEF_BIT_CHECK(UV0_SRC_INDEX,		3, SPOT_LCOUNT, 1)  // 0~7
	CJSHDESC_DEF_BIT(UV1_SRC_INDEX,				3, UV0_SRC_INDEX)
	CJSHDESC_DEF_BIT(UV2_SRC_INDEX,				3, UV1_SRC_INDEX)
	CJSHDESC_DEF_BIT(UV3_SRC_INDEX,				3, UV2_SRC_INDEX)
	CJSHDESC_DEF_BIT(UV4_SRC_INDEX,				3, UV3_SRC_INDEX)
	CJSHDESC_DEF_BIT(UV5_SRC_INDEX,				3, UV4_SRC_INDEX)
	CJSHDESC_DEF_BIT(UV6_SRC_INDEX,				3, UV5_SRC_INDEX)
	CJSHDESC_DEF_BIT(UV7_SRC_INDEX,				3, UV6_SRC_INDEX)
	
	CJSHDESC_DEF_BIT(UV0OUT_TYPE,				3, UV7_SRC_INDEX)
	CJSHDESC_DEF_BIT(UV1OUT_TYPE,				3, UV0OUT_TYPE)
	CJSHDESC_DEF_BIT(RESERVED0,					2, UV1OUT_TYPE)

	// [2] byte 0
	CJSHDESC_DEF_BIT_CHECK(UV2OUT_TYPE,			3, RESERVED0, 2)
	CJSHDESC_DEF_BIT(UV3OUT_TYPE,				3, UV2OUT_TYPE)
	CJSHDESC_DEF_BIT(UV4OUT_TYPE,				3, UV3OUT_TYPE)
	CJSHDESC_DEF_BIT(UV5OUT_TYPE,				3, UV4OUT_TYPE)
	CJSHDESC_DEF_BIT(UV6OUT_TYPE,				3, UV5OUT_TYPE)
	CJSHDESC_DEF_BIT(UV7OUT_TYPE,				3, UV6OUT_TYPE)	
	
};


//
// cjDefaultShaderPxlProgDesc
//

class CJENGINE_API cjDefaultShaderPxlProgDesc : public cjShaderProgramDesc
{
public:
	enum 
	{
		MAX_TEXCOORD_COUNT = 7,  // texcoord0 ~ texcoord6
		MAX_SAMPLER_COUNT = 8,
	};

	void A32BitBoundaryViloationTest() { }
	
	// texcoordIndex 0:none, 1:texcoord0 ~ 7:tecoord6
	void SetSamplerTexcoord(cjUINT32 samplerIndex, cjUINT32 texcoordIndex);
		
public:
	static const cjUINT32 _A_ST_DNBPOS = 1;

	CJSHDESC_DEF_BIT_CHECK(IN_WORLD_POS,	1, _ST, 0)
	CJSHDESC_DEF_BIT(IN_WORLD_NORMAL,		1, IN_WORLD_POS)
	CJSHDESC_DEF_BIT(IN_WORLD_NBT,			1, IN_WORLD_NORMAL)
	CJSHDESC_DEF_BIT(IN_WORLD_VIEW,			1, IN_WORLD_NBT)
	CJSHDESC_DEF_BIT(TEX_LIGHT_OPER,		1, IN_WORLD_VIEW)
	CJSHDESC_DEF_BIT(PER_VTX_LIGHTING,		1, TEX_LIGHT_OPER)	
	CJSHDESC_DEF_BIT(IN_VTX_COLOR,			1, PER_VTX_LIGHTING)
	CJSHDESC_DEF_BIT(IN_SPECULAR_COLOR,		1, IN_VTX_COLOR)

		// sampler
	CJSHDESC_DEF_BIT(TEX_DIFFUSE_CNT,		1, IN_SPECULAR_COLOR)	// s_texsamp0
	CJSHDESC_DEF_BIT(TEX_ENV_CNT,			1, TEX_DIFFUSE_CNT)		// s_texsamp1
	CJSHDESC_DEF_BIT(TEX_DETAIL_CNT,		1, TEX_ENV_CNT)			// s_texsamp2
	CJSHDESC_DEF_BIT(TEX_NORMAL_CNT,		1, TEX_DETAIL_CNT)		// s_texsamp3
	CJSHDESC_DEF_BIT(TEX_SPECULAR_CNT,		1, TEX_NORMAL_CNT)		// s_texsamp4
	CJSHDESC_DEF_BIT(TEX_GLOW_CNT,			1, TEX_SPECULAR_CNT)	// s_texsamp5
	CJSHDESC_DEF_BIT(TEX_EXT0_CNT,			1, TEX_GLOW_CNT)		// s_texsamp6
	CJSHDESC_DEF_BIT(TEX_EXT1_CNT,			1, TEX_EXT0_CNT)		// s_texsamp7

	CJSHDESC_DEF_BIT(ALPHATEST_USE,			1, TEX_EXT1_CNT)
	CJSHDESC_DEF_BIT(AMBIENT_USE,			1, ALPHATEST_USE)
	CJSHDESC_DEF_BIT(SPECULAR_USE,			1, AMBIENT_USE)	
	CJSHDESC_DEF_BIT(EMISSIVE_USE,			1, SPECULAR_USE)
	CJSHDESC_DEF_BIT(FOG_USE,				1, EMISSIVE_USE)
	CJSHDESC_DEF_BIT(LIGHTING,				1, FOG_USE)
	CJSHDESC_DEF_BIT(ADE_FROM,				2, LIGHTING)

	CJSHDESC_DEF_BIT(ENVMAP_TYPE,			1, ADE_FROM)
	CJSHDESC_DEF_BIT(NRMMAP_TYPE,			2, ENVMAP_TYPE)
	CJSHDESC_DEF_BIT(RESERVED_TYPE0,		5, NRMMAP_TYPE)
	
	// [1] byte 0
	CJSHDESC_DEF_BIT_CHECK(SAMP0_TEXCOORD,	3, RESERVED_TYPE0, 1)	// 3B, 0:none, 1:texcoord0, 2:texcoord1... ~ 7:texcoord6
	CJSHDESC_DEF_BIT(SAMP1_TEXCOORD,		3, SAMP0_TEXCOORD)		// 3B,
	CJSHDESC_DEF_BIT(SAMP2_TEXCOORD,		3, SAMP1_TEXCOORD)		// 3B,
	CJSHDESC_DEF_BIT(SAMP3_TEXCOORD,		3, SAMP2_TEXCOORD)		// 3B,
	CJSHDESC_DEF_BIT(SAMP4_TEXCOORD,		3, SAMP3_TEXCOORD)		// 3B,
	CJSHDESC_DEF_BIT(SAMP5_TEXCOORD,		3, SAMP4_TEXCOORD)		// 3B,
	CJSHDESC_DEF_BIT(SAMP6_TEXCOORD,		3, SAMP5_TEXCOORD)		// 3B,
	CJSHDESC_DEF_BIT(SAMP7_TEXCOORD,		3, SAMP6_TEXCOORD)		// 3B,
	CJSHDESC_DEF_BIT(DIR_LCOUNT,			3, SAMP7_TEXCOORD)		// 3B, 0:none, 1~4:light count
	CJSHDESC_DEF_BIT(POINT_LCOUNT,			3, DIR_LCOUNT)
	CJSHDESC_DEF_BIT(SPOT_LCOUNT,			2, POINT_LCOUNT)

	// [2] byte 0	
	CJSHDESC_DEF_BIT_CHECK(SHADOWMAP_FOR_LIGHT,	2, SPOT_LCOUNT, 2)
	
};


#endif
